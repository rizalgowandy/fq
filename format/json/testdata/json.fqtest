/probe.json:
{"a": 123}
/probe_scalar.json:
123
$ fq . /probe.json
{
  "a": 123
}
$ fq . /probe_scalar.json
123
# make sure all value types parse to json format
$ fq -rRs 'fromjson[] | tojson | fromjson | format' variants.json
json
json
json
json
json
json
json
json
json
json
$ fq -rRs 'fromjson[] | (tojson | ., fromjson), "----", (tojson({indent:2}) | ., fromjson), "----"' variants.json
null
null
----
null
null
----
true
true
----
true
true
----
false
false
----
false
false
----
123
123
----
123
123
----
123.123
123.123
----
123.123
123.123
----
"string"
string
----
"string"
string
----
[1,2,3]
[
  1,
  2,
  3
]
----
[
  1,
  2,
  3
]
[
  1,
  2,
  3
]
----
{"array":[true,false,null,1.2,"string",[1.2,3],{"a":1}],"escape \\\"":456,"false":false,"null":null,"number":1.2,"object":{"a":1},"string":"string","true":true,"white space":123}
{
  "array": [
    true,
    false,
    null,
    1.2,
    "string",
    [
      1.2,
      3
    ],
    {
      "a": 1
    }
  ],
  "escape \\\"": 456,
  "false": false,
  "null": null,
  "number": 1.2,
  "object": {
    "a": 1
  },
  "string": "string",
  "true": true,
  "white space": 123
}
----
{
  "array": [
    true,
    false,
    null,
    1.2,
    "string",
    [
      1.2,
      3
    ],
    {
      "a": 1
    }
  ],
  "escape \\\"": 456,
  "false": false,
  "null": null,
  "number": 1.2,
  "object": {
    "a": 1
  },
  "string": "string",
  "true": true,
  "white space": 123
}
{
  "array": [
    true,
    false,
    null,
    1.2,
    "string",
    [
      1.2,
      3
    ],
    {
      "a": 1
    }
  ],
  "escape \\\"": 456,
  "false": false,
  "null": null,
  "number": 1.2,
  "object": {
    "a": 1
  },
  "string": "string",
  "true": true,
  "white space": 123
}
----
[]
[]
----
[]
[]
----
{}
{}
----
{}
{}
----
